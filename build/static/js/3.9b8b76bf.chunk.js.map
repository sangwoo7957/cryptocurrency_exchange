{"version":3,"sources":["components/main/CoinDashlet.jsx","components/main/CoinOverview.jsx","components/component/Option.jsx","components/component/Select.jsx","components/main/TransactionSearchFilter.jsx","containers/main/TransactionSearchFilterContainer.jsx","components/component/Table.jsx","components/component/TableRow.jsx","components/component/TableCell.jsx","components/component/TableHead.jsx","components/component/TableBody.jsx","components/main/TransactionTable.jsx","components/component/withLoading.jsx","components/main/TransactionPagination.jsx","containers/main/TransactionPaginationContainer.jsx","components/main/TransactionList.jsx","containers/main/TransactionListContainer.jsx","components/main/MainPage.jsx"],"names":["CoinDashlet","_this$props","this","props","name","priceLabel","react_default","a","createElement","context","_ref","openModal","Card","vertical","horizontal","Heading","level","Text","InlineList","spacingBetween","Button","primary","small","onPress","TRADE_COIN_MODAL","type","price","PureComponent","CoinOverview","Fragment","main_CoinDashlet","Option","value","label","disabled","Select","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setRef","bind","assertThisInitialized","handleChange","handleFocus","handleBlur","state","focused","setState","e","onChange","target","autoFocus","ref","focus","_this$props2","children","errorMessage","styles","large","xlarge","xsmall","css","wrapper","assign","htmlFor","concat","errorLabel","placeholder","xsmallPadding","smallPadding","largePadding","xlargePadding","error","select","id","onFocus","onBlur","React","Children","map","child","cloneElement","defaultProps","withStyles","depth","unit","color","size","lineHeight","border","padding","position","display","fontSize","xs","top","left","cursor","marginTop","borderColor","borderStyle","borderRadius","boxShadow","md","backgroundColor","white","outline","width","xg","lg","sm","TransactionSearchFilter","handleSubmit","params","history","setFilter","querystring","entries","filter","reduce","obj","_ref2","slicedToArray","key","objectSpread","defineProperty","_ref3","_ref4","join","push","initValues","Form","onSubmit","Consumer","_ref5","values","verticalAlign","bold","component_Select","component_Option","Input","withRouter","connect","searchFilter","Table","table","borderCollapse","TableRow","isHeader","baseline","TableCell","align","Tag","cell","header","alignCenter","alignRight","paddingTop","paddingBottom","paddingRight","paddingLeft","textAlign","borderBottom","TableHead","TableBody","length","toArray","index","LoadingMessage","Spacing","TransactionTable","transactions","component_Table","component_TableHead","component_TableRow","component_TableCell","component_TableBody","totalPrice","currentPrice","datetime","withLoading","loadingMessage","arguments","undefined","WrappedComponent","displayName","componentName","wrappedComponentName","WithLoading","isLoading","objectWithoutProperties","TransactionPagination","handleNextPress","handlePrevPress","requestTransactionList","searchParams","pageNumber","_this$props3","loading","hasNext","prevDisabled","nextDisabled","secondary","mapDispatchToProps","_state$transactions","pagination","ids","number","transactionListLoadingStateSelector","paginationSelector","TransactionList","TransactionSearchFilterContainer","main_TransactionTable","TransactionPaginationContainer","transactionListSelector","MainPage","main_CoinOverview","TransactionListContainer"],"mappings":"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","file":"static/js/3.9b8b76bf.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Heading from '../component/Heading';\nimport Button from '../component/Button';\nimport Card from '../component/Card';\nimport InlineList from '../component/InlineList';\nimport Text from '../component/Text';\nimport { Consumer as Modal } from '../Modal/context';\nimport { TRADE_COIN_MODAL } from '../../constants/modals';\n\nclass CoinDashlet extends PureComponent {\n  render() {\n    const { name, priceLabel } = this.props;\n    return (\n      <Modal>\n        {({ openModal }) => (\n          <Card vertical={4} horizontal={4}>\n            <Heading level={4}>\n              {name}\n              <Text>{priceLabel}</Text>\n            </Heading>\n            <InlineList spacingBetween={1}>\n              <Button\n                primary\n                small\n                onPress={() =>\n                  openModal(TRADE_COIN_MODAL, { type: 'sell', name, price: priceLabel })\n                }\n              >\n                매도\n              </Button>\n              <Button\n                small\n                onPress={() =>\n                  openModal(TRADE_COIN_MODAL, { type: 'buy', name, price: priceLabel })\n                }\n              >\n                매수\n              </Button>\n            </InlineList>\n          </Card>\n        )}\n      </Modal>\n    );\n  }\n}\nCoinDashlet.propTypes = {\n  name: PropTypes.string,\n  priceLabel: PropTypes.string,\n};\nexport default CoinDashlet;\n","import React, { PureComponent } from 'react';\n\nimport Heading from '../component/Heading';\nimport InlineList from '../component/InlineList';\n\nimport CoinDashlet from './CoinDashlet';\n\nclass CoinOverview extends PureComponent {\n  render() {\n    return (\n      <React.Fragment>\n        <Heading level={3}>코인 동향</Heading>\n        <InlineList>\n          <CoinDashlet name=\"비트코인\" priceLabel=\"37,987,159원\" />\n          <CoinDashlet name=\"이더리움\" priceLabel=\"2,648,165원\" />\n          <CoinDashlet name=\"리플\" priceLabel=\"551원\" />\n        </InlineList>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CoinOverview;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Option extends PureComponent {\n  render() {\n    const { value, label, disabled } = this.props;\n\n    return (\n      <option value={value} disabled={disabled}>\n        {label || value}\n      </option>\n    );\n  }\n}\n\nOption.propTypes = {\n  disabled: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nexport default Option;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, css, withStylesPropTypes } from './withStyles';\nimport Option from './Option';\n\nexport { Option };\n\nclass Select extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.state = {\n      focused: false\n    };\n  }\n  handleFocus() {\n    this.setState({ focused: true });\n  }\n  handleBlur() {\n    this.setState({ focused: false });\n  }\n  handleChange(e) {\n    const { name, onChange } = this.props;\n    if (onChange) {\n      onChange(name, e.target.value);\n    }\n  }\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n  setRef(ref) {\n    this.ref = ref;\n  }\n  render() {\n    const {\n      children,\n      disabled,\n      errorMessage,\n      label,\n      value,\n      name,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall\n    } = this.props;\n    const { focused } = this.state;\n\n    return (\n      <fieldset {...css(styles.wrapper)}>\n        <label\n          htmlFor={`input_${name}`}\n          {...css(styles.label, errorMessage && styles.errorLabel)}\n        >\n          {errorMessage || label}\n        </label>\n        <div\n          {...css(\n            styles.placeholder,\n            xsmall && styles.xsmallPadding,\n            small && styles.smallPadding,\n            large && styles.largePadding,\n            xlarge && styles.xlargePadding,\n            focused && styles.focus,\n            errorMessage && styles.error\n          )}\n        >\n          <select\n            {...css(\n              styles.select,\n              xsmall && styles.xsmall,\n              small && styles.small,\n              large && styles.large,\n              xlarge && styles.xlarge\n            )}\n            disabled={disabled}\n            id={`input_${name}`}\n            ref={this.setRef}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            value={value}\n          >\n            {React.Children.map(children, child =>\n              React.cloneElement(child, { disabled })\n            )}\n          </select>\n        </div>\n      </fieldset>\n    );\n  }\n}\n\nSelect.propTypes = {\n  ...withStylesPropTypes,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool\n};\n\nSelect.defaultProps = {\n  onChange: () => {},\n  autoFocus: false\n};\n\nexport default withStyles(({ depth, unit, color, size, lineHeight }) => ({\n  wrapper: {\n    border: 0,\n    padding: 0,\n    position: 'relative'\n  },\n  label: {\n    display: 'block',\n    fontSize: size.xs,\n    top: 2,\n    left: unit * 2,\n    cursor: 'pointer'\n  },\n  placeholder: {\n    marginTop: 2,\n    border: 1,\n    borderColor: color.primary,\n    borderStyle: 'solid',\n    borderRadius: 4,\n    padding: unit * 1.5\n  },\n  focus: {\n    boxShadow: '0 0 0px 2px rgba(0, 0, 0, 0.3)'\n  },\n  xlargePadding: {\n    padding: unit * 2\n  },\n  largePadding: {\n    padding: unit * 2\n  },\n  smallPadding: {\n    padding: unit - 1\n  },\n  select: {\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    backgroundColor: color.white,\n    border: 0,\n    outline: 0,\n    width: '100%'\n  },\n  xlarge: {\n    fontSize: size.xg\n  },\n  large: {\n    fontSize: size.lg\n  },\n  small: {\n    fontSize: size.sm\n  },\n  errorLabel: {\n    color: color.error\n  },\n  error: {\n    borderColor: color.error\n  }\n}))(Select);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport InlineList from '../component/InlineList';\nimport Button from '../component/Button';\nimport Text from '../component/Text';\nimport Input from '../component/Input';\nimport Form from '../component/Form';\nimport Select, { Option } from '../component/Select';\n\n// import Api from '../../Api';\n\nclass TransactionSearchFilter extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(params) {\n    // const { requestTransactionList, setFilter } = this.props;\n    const { setFilter, history } = this.props;\n    const cleanedParams = Object.entries(params)\n      .filter(entries => entries[1] !== '')\n      .reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});\n    // requestTransactionList(cleanedParams);\n    // setFilter(cleanedParams);\n    const querystring = Object.entries(params)\n      .filter(entries => !!entries[1])\n      .map(([key, value]) => `${key}=${value}`)\n      .join('&');\n    history.push(`/?${querystring}`);\n\n    // Api.get('/transactions', { params })\n    //   .then(({ data }) => setTransactionList(data));\n  }\n  render() {\n    const { initValues } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit} initValues={initValues}>\n        <Form.Consumer>\n          {({ onChange, values }) => (\n            <InlineList spacingBetween={2} verticalAlign=\"bottom\">\n              <Text xlarge bold>\n                검색\n              </Text>\n              <Select name=\"code\" label=\"코인 코드\" onChange={onChange} value={values['code']}>\n                <Option label=\"선택해주세요\" value=\"\" />\n                <Option label=\"비트코인(BTX)\" value=\"BTX\" />\n                <Option label=\"이더리움(ETH)\" value=\"ETH\" />\n                <Option label=\"리플(RXP)\" value=\"RXP\" />\n              </Select>\n              <Input\n                name=\"currentPrice_gte\"\n                label=\"최소 거래가\"\n                onChange={onChange}\n                value={values['currentPrice_gte']}\n              />\n              <Input\n                name=\"currentPrice_lte\"\n                label=\"최대 거래가\"\n                onChange={onChange}\n                value={values['currentPrice_lte']}\n              />\n              <Button type=\"submit\" primary>\n                검색\n              </Button>\n            </InlineList>\n          )}\n        </Form.Consumer>\n      </Form>\n    );\n  }\n}\n\nTransactionSearchFilter.propTypes = { setFilter: PropTypes.func };\n\nexport default withRouter(TransactionSearchFilter);\n","import { connect } from 'react-redux';\nimport TransactionSearchFilter from '../../components/main/TransactionSearchFilter';\n// import { requestTransactionList } from '../../actions/transactionActions';\nimport { requestTransactionList } from '../../actions/transactionPackActions';\nimport { setFilter } from '../../actions/searchFilterActions';\n\nconst mapStateToProps = state => ({\n  initValues: state.searchFilter.params,\n});\n\nexport default connect(mapStateToProps, { setFilter })(TransactionSearchFilter);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, css, withStylesPropTypes } from './withStyles';\n\nclass Table extends PureComponent {\n  render() {\n    const { styles, children } = this.props;\n    return (\n      <table {...css(styles.table)}>\n        {children}\n      </table>\n    );\n  }\n}\n\nTable.propTypes = {\n  ...withStylesPropTypes,\n  children: PropTypes.node.isRequired,\n};\n\nexport default withStyles(({ color, unit }) => ({\n  table: {\n    borderCollapse: 'collapse',\n    width: '100%',\n  },\n}))(Table);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TableRow extends PureComponent {\n  render() {\n    const { children, isHeader, baseline } = this.props;\n\n    return (\n      <tr>\n        {React.Children.map(children, child =>\n          React.cloneElement(child, { baseline, isHeader })\n        )}\n      </tr>\n    );\n  }\n}\n\nTableRow.propTypes = {\n  children: PropTypes.node,\n  baseline: PropTypes.bool,\n  isHeader: PropTypes.bool\n};\n\nexport default TableRow;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, css, withStylesPropTypes } from './withStyles';\n\nclass TableCell extends PureComponent {\n  render() {\n    const { align, baseline, styles, children, isHeader } = this.props;\n    const Tag = isHeader ? 'th' : 'td';\n    return (\n      <Tag\n        {...css(\n          styles.cell,\n          isHeader && styles.header,\n          !isHeader && baseline && styles.baseline,\n          align === 'center' && styles.alignCenter,\n          align === 'right' && styles.alignRight,\n        )}\n      >\n        {children}\n      </Tag>\n    );\n  }\n}\n\nTableCell.propTypes = {\n  ...withStylesPropTypes,\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n  baseline: PropTypes.bool,\n  children: PropTypes.node,\n  isHeader: PropTypes.bool,\n};\n\nTableCell.defaultProps = {\n  baseline: true,\n  isHeader: false,\n};\n\nexport default withStyles(({ color, unit }) => ({\n  cell: {\n    paddingTop: unit * 4,\n    paddingBottom: unit * 4,\n    paddingRight: unit * 8,\n    paddingLeft: unit * 8,\n    backgroundColor: color.white,\n    textAlign: 'left'\n  },\n  header: {\n    backgroundColor: color.primary,\n    color: color.white\n  },\n  baseline: {\n    borderBottom: `1px solid ${color.border}`\n  },\n  alignCenter: {\n    textAlign: 'center',\n  },\n  alignRight: {\n    textAlign: 'right',\n  },\n}))(TableCell);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TableHead extends PureComponent {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <thead>\n        {React.Children.map(children, child =>\n          React.cloneElement(child, { isHeader: true })\n        )}\n      </thead>\n    );\n  }\n}\n\nTableHead.propTypes = {\n  children: PropTypes.node\n};\n\nexport default TableHead;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TableBody extends PureComponent {\n  render() {\n    const { children } = this.props;\n    const { length } = React.Children.toArray(children);\n\n    return (\n      <tbody>\n        {React.Children.map(children, (child, index) => {\n          const baseline = index < length - 1 ? true : false;\n          return React.cloneElement(child, { baseline });\n        })}\n      </tbody>\n    );\n  }\n}\n\nTableBody.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default TableBody;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../component/Table';\nimport TableRow from '../component/TableRow';\nimport TableCell from '../component/TableCell';\nimport TableHead from '../component/TableHead';\nimport TableBody from '../component/TableBody';\nimport Text from '../component/Text';\nimport Spacing from '../component/Spacing';\nimport withLoading from '../component/withLoading';\n\nconst LoadingMessage = (\n  <Spacing vertical={4} horizontal={2}>\n    <Text large>데이터를 불러들이고 있습니다.</Text>\n  </Spacing>\n);\nclass TransactionTable extends PureComponent {\n  render() {\n    const { transactions } = this.props;\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">코인</TableCell>\n            <TableCell align=\"center\">시가 총액</TableCell>\n            <TableCell align=\"center\">현재 시세</TableCell>\n            <TableCell align=\"right\">거래 시간</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {transactions.map(({ id, name, totalPrice, currentPrice, datetime }) => (\n            <TableRow key={id}>\n              <TableCell>{name}</TableCell>\n              <TableCell align=\"center\">{totalPrice}</TableCell>\n              <TableCell align=\"center\">{currentPrice}</TableCell>\n              <TableCell align=\"right\">{datetime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nTransactionTable.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      totalPrice: PropTypes.number,\n      currentPrice: PropTypes.number,\n      datetime: PropTypes.string,\n    }),\n  ),\n};\n\nexport default withLoading(LoadingMessage)(TransactionTable);\n","import React from 'react';\n\nexport default (loadingMessage = '로딩중') => WrappedComponent => {\n  const { displayName, name: componentName } = WrappedComponent;\n  const wrappedComponentName = displayName || componentName;\n\n  function WithLoading({ isLoading, ...props }) {\n    if (isLoading) {\n      return loadingMessage;\n    }\n\n    return <WrappedComponent {...props} />;\n  }\n  WithLoading.displayName = `withLoading(${wrappedComponentName})`;\n  return WithLoading;\n};","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../component/Button';\nimport InlineList from '../component/InlineList';\n\nclass TransactionPagination extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleNextPress = this.handleNextPress.bind(this);\n    this.handlePrevPress = this.handlePrevPress.bind(this);\n  }\n  handleNextPress() {\n    const { requestTransactionList, searchParams, pageNumber } = this.props;\n    requestTransactionList(searchParams, pageNumber + 1);\n  }\n  handlePrevPress() {\n    const { requestTransactionList, searchParams, pageNumber } = this.props;\n    requestTransactionList(searchParams, pageNumber - 1);\n  }\n  render() {\n    const { loading, pageNumber, hasNext } = this.props;\n    const prevDisabled = loading || pageNumber <= 1;\n    const nextDisabled = loading || !hasNext;\n    return (\n      <InlineList align=\"right\">\n        <Button secondary disabled={prevDisabled} onPress={this.handlePrevPress}>\n          이전\n        </Button>\n        <Button primary disabled={nextDisabled} onPress={this.handleNextPress}>\n          다음\n        </Button>\n      </InlineList>\n    );\n  }\n}\n\nTransactionPagination.propTypes = {\n  hasNext: PropTypes.bool,\n  pageNumber: PropTypes.number,\n  loading: PropTypes.bool,\n  requestTransactionList: PropTypes.func.isRequired,\n};\n\nexport default TransactionPagination;\n","import { connect } from 'react-redux';\nimport TransactionPagination from '../../components/main/TransactionPagination';\nimport { requestTransactionList } from '../../actions/transactionPackActions';\nimport {\n  paginationSelector,\n  transactionListLoadingStateSelector,\n} from '../../selectors/transactionSelectors';\n\nconst mapStateToProps = state => {\n  const { pagination, loading, ids } = state.transactions;\n  const { number, size } = pagination;\n\n  return {\n    searchParams: state.searchFilter.params,\n    hasNext: ids.length === size,\n    loading: transactionListLoadingStateSelector(state),\n    pageNumber: paginationSelector(state).number || 1,\n  };\n};\nconst mapDispatchToProps = {\n  requestTransactionList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionPagination);\n","import React, { PureComponent } from 'react';\n\n// import axios from 'axios';\n// import Api from '../../Api';\n\nimport Heading from '../component/Heading';\nimport Card from '../component/Card';\n\n// import TransactionSearchFilter from './TransactionSearchFilter';\n\nimport TransactionSearchFilterContainer from '../../containers/main/TransactionSearchFilterContainer';\nimport TransactionTable from './TransactionTable';\nimport TransactionPaginationContainer from '../../containers/main/TransactionPaginationContainer';\n\nclass TransactionList extends PureComponent {\n  componentDidMount() {\n    /*\n    axios.get('http://localhost:4000/transactions')\n      .then(response => this.setState({ transactions: response.data }));\n\n    axios.get('http://localhost:4000/transactions', { params: { code: 'BTX' } })\n      .then(response => this.setState({ transactions: response.data }));\n\n\n\n    Api.get('/transactions')\n      .then(({ data }) => this.props.setTransactionList(data));\n\n    this.props.requestTransactionList();\n    */\n  }\n\n  render() {\n    // const { transactions } = this.state;\n\n    const { transactions, loading } = this.props;\n    return (\n      <div>\n        <Heading level={3}>거래 현황</Heading>\n        <Card vertical={4} horizontal={4}>\n          <TransactionSearchFilterContainer />\n        </Card>\n        <Card>\n          <TransactionTable transactions={transactions} isLoading={loading} />\n        </Card>\n        <TransactionPaginationContainer />\n      </div>\n    );\n  }\n}\n\nTransactionList.defaultProps = {\n  transactions: [],\n  requestTransactionList: () => {},\n};\n\nexport default TransactionList;\n","import { connect } from 'react-redux';\nimport TransactionList from '../../components/main/TransactionList';\n// import { setTransactionList } from '../../actions/transactionActions';\n// import { requestTransactionList } from '../../actions/transactionActions';\nimport { requestTransactionList } from '../../actions/transactionPackActions';\nimport {\n  transactionListSelector,\n  transactionListLoadingStateSelector,\n} from '../../selectors/transactionSelectors';\n\n// const mapStateToProps = state => {\n//   // const { ids, entities, loadingState, pages, pagination } = state.transactions;\n//   // const transactions = ids.map(id => entities[id]);\n//   const { pagination } = state.transactions;\n//   const transactions = transactionListSelector(state);\n//   const loading = transactionListLoadingStateSelector(state);\n//   const { number = 1 } = pagination;\n//   return { transactions, loading: loading && number === 1 };\n// };\n\nconst mapStateToProps = state => ({\n  transactions: transactionListSelector(state),\n  loading: transactionListLoadingStateSelector(state),\n});\n\nconst mapDispatchToProps = {\n  requestTransactionList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);\n","import React, { PureComponent } from 'react';\nimport CoinOverview from './CoinOverview';\n// import TransactionList from './TransactionList';\nimport TransactionListContainer from '../../containers/main/TransactionListContainer';\n\nclass MainPage extends PureComponent {\n  render() {\n    return (\n      <React.Fragment>\n        <CoinOverview />\n        <TransactionListContainer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainPage;\n"],"sourceRoot":""}